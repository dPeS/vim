#!/usr/bin/python

import threading
import time
import logging
import socket

log = logging.getLogger(__name__)

try:
    import gtk
    import vte
    import gobject
except:
    log.error("pls run: apt-get install python-gtk python-vte")
    raise

THEMES = {
    'fg': '#FFFFFF',
    'bg_local': '#000000',
    'bg_remote': '#000000'  # 695400
}


class Monitor(threading.Thread):
    def __init__(self):
        super(Monitor, self).__init__()
        self.quit = False

    def process_tabs(self):
        for i in xrange(notebook.get_n_pages()):
            title = notebook.get_nth_page(i).get_window_title()
            host = title.split('@')[1].split(':')[0]
            notebook.set_tab_label(notebook.get_nth_page(i), gtk.Label(host))

            if host != socket.gethostname():
                bg = gtk.gdk.color_parse(THEMES['bg_remote'])
            else:
                bg = gtk.gdk.color_parse(THEMES['bg_local'])

            notebook.get_nth_page(i).set_colors(
                gtk.gdk.color_parse(THEMES['fg']),
                bg,
                []
            )

    def run(self):
        while not self.quit:
            time.sleep(1)
            gobject.idle_add(self.process_tabs)


def remove_tab():
    notebook.remove_page(notebook.get_current_page())
    if notebook.get_n_pages() == 0:
        gtk.main_quit()


def process_event(window, e):
    if e.keyval > 48 and e.keyval < 54 and e.state == gtk.gdk.MOD1_MASK:
        notebook.set_current_page(e.keyval-48-1)  # 0-index
        window.set_focus(notebook.get_nth_page(e.keyval-48-1))
        return True
    elif e.keyval == 110 and e.state == gtk.gdk.MOD1_MASK:
        gobject.idle_add(create_new_tab)
        return True


def create_new_tab():
    term = vte.Terminal()
    term.set_scrollback_lines(10000)
    term.set_font_from_string("Dejavu Sans Mono 10")
    term.connect("child-exited", lambda term: remove_tab())
    term.set_colors(
        gtk.gdk.color_parse(THEMES['fg']),
        gtk.gdk.color_parse(THEMES['bg_local']),
        []
    )
    term.set_word_chars("-A-Za-z0-9,./?%&#:_")
    term.fork_command()
    notebook.append_page(term)
    window.show_all()


if __name__ == '__main__':
    gobject.threads_init()
    window = gtk.Window()
    notebook = gtk.Notebook()
    create_new_tab()
    window.add(notebook)
    window.connect(
        'delete-event',
        lambda window, e: gtk.main_quit()
    )
    window.connect(
        'key-press-event',
        lambda window, e: process_event(window, e)
    )
    window.show_all()
    window.set_focus(notebook.get_nth_page(0))
    monitor = Monitor()
    monitor.start()
    gtk.main()
    monitor.quit = True
